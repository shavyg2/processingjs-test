// Generated by CoffeeScript 1.7.1
var Particle, canvas, image, p, particles, resize;

resize = false;

Particle = (function() {
  function Particle(x, y) {
    this.x = x;
    this.y = y;
    this._rotate = p.random(-30, 30);
    this.life = p.random(5000, 5000);
    this.initGravity = 1;
    this.gravity = this.initGravity;
    this.spread = 10;
    this.xV = p.random(-this.spread, this.spread);
    this.yV = p.random(-this.spread, this.spread);
  }

  Particle.prototype.update = function() {
    if (this.y <= 0) {
      this.yV = 0;
    } else if (this.y > p.height) {
      this.y = p.height;
      this.xV = this.xV * 0.90;
      this.gravity = parseInt(-Math.floor(Math.abs(this.gravity * 0.7)));
      this.yV *= 0.7;
    }
    this.rotate += this._rotate;
    this.life--;
    this.gravity += this.initGravity;
    this.y += this.gravity;
    this.x += this.xV;
    this.y += this.yV;
    if (this.x <= 0) {
      this.xV = -this.xV * 0.9;
      return this.x = 0;
    } else if (this.x >= p.width) {
      this.xV = -this.xV;
      return this.x = p.width;
    }
  };

  Particle.prototype.draw = function() {
    if (this.type == null) {
      this.type = this.func();
    }
    if (this.type === p.ellipse) {
      p.pushMatrix();
      p.translate(0, -image.width / 2);
    } else if (this.type === p.rect) {
      p.pushMatrix();
      p.translate(-25, -(image.width / 2) - 25);
    }
    this.type.call(p, this.x, this.y, 50, 50);
    return p.popMatrix();
  };

  Particle.prototype.drawImage = function() {
    if (image.width > 0) {
      p.pushMatrix();
      p.translate(-image.width / 2, -image.height / 2);
      p.pushMatrix();
      p.rotate(p.PI / 2);
      p.popMatrix();
      p.popMatrix();
      p.pushMatrix();
      p.translate(-image.width / 2, -image.height);
      p.image(image, this.x, this.y);
      return p.popMatrix();
    }
  };

  Particle.prototype.resize = function(factor) {
    if (factor == null) {
      factor = 1;
    }
    if (!resize) {
      image.resize(image.width / factor, image.height / factor);
      return resize = true;
    }
  };

  Particle.prototype.type = null;

  Particle.prototype.func = function() {
    var num, opt;
    opt = [p.ellipse, p.rect];
    num = Math.round(p.random(0, opt.length - 1));
    return opt[num];
  };

  return Particle;

})();

canvas = document.getElementById("tv");

p = new Processing(canvas);

particles = [];

p.draw = function() {
  var i, newp, particle, _i, _j, _k, _len, _len1;
  p.fill(255, 255, 255, 255);
  p.rect(0, 0, p.width, p.height);
  p.fill(255, 255, 255, 0);
  if (p.__mousePressed) {
    for (i = _i = 0; _i < 10; i = ++_i) {
      particles.push(new Particle(p.mouseX, p.mouseY));
    }
  }
  while (particles.length > 500) {
    particles.shift();
  }
  for (_j = 0, _len = particles.length; _j < _len; _j++) {
    particle = particles[_j];
    particle.update();
    particle.drawImage();
    particle.draw();
  }
  newp = [];
  for (_k = 0, _len1 = particles.length; _k < _len1; _k++) {
    particle = particles[_k];
    if (!(particle.life < 0)) {
      newp.push(particle);
    }
  }
  return particles = newp;
};

image = p.requestImage("http://www.sierraclub.bc.ca/images/design-assets/twitter-icon");

image.resize(50, 50);

p.size(document.body.clientWidth, document.body.clientHeight * 0.9);

p.frameRate(30);

p.loop();


/*
pText= Processing.toString().split("\n")

print=false;
max=1
more=max;
for line in pText
  if line.indexOf("p.mouse") > -1 or print
    unless print
      console.log  "_____________________________________________________________________________"
    console.log line
    print=true
    more--
  if more<=0
    print=false
    more=max
 */
